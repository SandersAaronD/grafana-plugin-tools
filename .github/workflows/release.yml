name: Node CI
on:
  push:
    branches:
      - main
  pull_request_target:
    branches:
      - main

jobs:
  release:
    runs-on: ubuntu-latest
    needs: [test, generate-plugins]
    if: "!contains(github.event.head_commit.message, 'ci skip') && !contains(github.event.head_commit.message, 'skip ci') && github.actor != 'dependabot[bot]'"
    name: Release packages
    env:
      NX_CLOUD_ACCESS_TOKEN: ${{ secrets.NX_CLOUD_ACCESS_TOKEN }}
      NX_BRANCH: ${{ github.event.number || github.ref_name }}
      NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
    steps:
      - name: Generate token
        id: generate_token
        uses: tibdex/github-app-token@3beb63f4bd073e61482598c45c71c1019b59b73a
        with:
          app_id: ${{ secrets.PLUGINS_PLATFORM_BOT_APP_ID }}
          private_key: ${{ secrets.PLUGINS_PLATFORM_BOT_APP_PEM }}

      - uses: actions/checkout@v4
        with:
          token: ${{ steps.generate_token.outputs.token }}

      - name: Prepare repository
        run: git fetch --unshallow --tags

      - name: Setup environment
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci --no-audit

      - name: Build
        run: npm run build

      - name: Create Release
        env:
          GITHUB_TOKEN: ${{ steps.generate_token.outputs.token }}
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        run: npm run release
