"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[48],{876:(e,t,n)=>{n.d(t,{Zo:()=>l,kt:()=>g});var o=n(2784);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},i=Object.keys(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=o.createContext({}),s=function(e){var t=o.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},l=function(e){var t=s(e.components);return o.createElement(p.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},f=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,p=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),d=s(n),f=r,g=d["".concat(p,".").concat(f)]||d[f]||u[f]||i;return n?o.createElement(g,a(a({ref:t},l),{},{components:n})):o.createElement(g,a({ref:t},l))}));function g(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,a=new Array(i);a[0]=f;var c={};for(var p in t)hasOwnProperty.call(t,p)&&(c[p]=t[p]);c.originalType=e,c[d]="string"==typeof e?e:r,a[1]=c;for(var s=2;s<i;s++)a[s]=n[s];return o.createElement.apply(null,a)}return o.createElement.apply(null,n)}f.displayName="MDXCreateElement"},5248:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>a,default:()=>u,frontMatter:()=>i,metadata:()=>c,toc:()=>s});var o=n(7896),r=(n(2784),n(876));const i={id:"advanced-configuration",title:"Advanced Configuration"},a=void 0,c={unversionedId:"advanced-configuration",id:"advanced-configuration",title:"Advanced Configuration",description:"The .config/ directory holds the preferred configuration for the different tools used to develop, test, and build a plugin.",source:"@site/../docs/advanced-configuration.md",sourceDirName:".",slug:"/advanced-configuration",permalink:"/plugin-tools/docs/advanced-configuration",draft:!1,editUrl:"https://github.com/grafana/plugin-tools/edit/main/docusaurus/website/../docs/advanced-configuration.md",tags:[],version:"current",frontMatter:{id:"advanced-configuration",title:"Advanced Configuration"},sidebar:"docs",previous:{title:"Signing Your Plugin",permalink:"/plugin-tools/docs/signing-your-plugin"},next:{title:"Nested Plugins",permalink:"/plugin-tools/docs/nested-plugins"}},p={},s=[{value:"How to extend the configs?",id:"how-to-extend-the-configs",level:2},{value:"Extend the ESLint config",id:"extend-the-eslint-config",level:3},{value:"Extend the Prettier config",id:"extend-the-prettier-config",level:3},{value:"Extend the Jest config",id:"extend-the-jest-config",level:3},{value:"ESM errors with Jest",id:"esm-errors-with-jest",level:4},{value:"Extend the TypeScript config",id:"extend-the-typescript-config",level:3},{value:"Extend the Webpack config",id:"extend-the-webpack-config",level:3},{value:"1. Create a new Webpack configuration file",id:"1-create-a-new-webpack-configuration-file",level:4},{value:"2. Merge the Grafana config with your custom config",id:"2-merge-the-grafana-config-with-your-custom-config",level:4},{value:"3. Update the <code>package.json</code> to use the new Webpack config",id:"3-update-the-packagejson-to-use-the-new-webpack-config",level:4}],l={toc:s},d="wrapper";function u(e){let{components:t,...n}=e;return(0,r.kt)(d,(0,o.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},".config/")," directory holds the preferred configuration for the different tools used to develop, test, and build a plugin."),(0,r.kt)("admonition",{type:"danger"},(0,r.kt)("p",{parentName:"admonition"},"To make future updates easier do ",(0,r.kt)("strong",{parentName:"p"},"not")," edit files in the ",(0,r.kt)("inlineCode",{parentName:"p"},".config")," directory. Instead, follow the directions in this article to customise the tooling configurations.")),(0,r.kt)("h2",{id:"how-to-extend-the-configs"},"How to extend the configs?"),(0,r.kt)("p",null,"Note that you are doing this at your own risk. Extending the tooling configurations may lead to issues such as failing to compile the plugin or problems loading the plugin in Grafana."),(0,r.kt)("h3",{id:"extend-the-eslint-config"},"Extend the ESLint config"),(0,r.kt)("p",null,"Edit the ",(0,r.kt)("inlineCode",{parentName:"p"},".eslintrc")," file in the project root to extend the ESLint configuration."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Example:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  // Eslint configuration provided by @grafana/create-plugin\n  "extends": "./.config/.eslintrc",\n  "rules": {\n    "react/prop-types": "off"\n  }\n}\n')),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"extend-the-prettier-config"},"Extend the Prettier config"),(0,r.kt)("p",null,"Edit the ",(0,r.kt)("inlineCode",{parentName:"p"},".prettierrc.js")," file in the project root to extend the Prettier configuration."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Example:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"module.exports = {\n  // Prettier configuration provided by @grafana/create-plugin\n  ...require('./.config/.prettierrc.js'),\n  semi: false,\n};\n")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"extend-the-jest-config"},"Extend the Jest config"),(0,r.kt)("p",null,"There are two files in the project root that belong to Jest: ",(0,r.kt)("inlineCode",{parentName:"p"},"jest-setup.js")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"jest.config.js"),"."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"jest-setup.js"),":")," This file is run before each test file in the suite is executed. It will set up Jest DOM for the testing library and apply some polyfills. (",(0,r.kt)("a",{parentName:"p",href:"https://jestjs.io/docs/configuration#setupfilesafterenv-array"},"link to Jest docs"),")"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"jest.config.js"),":")," The Jest config file that extends the Grafana config. (",(0,r.kt)("a",{parentName:"p",href:"https://jestjs.io/docs/configuration"},"link to Jest docs"),")"),(0,r.kt)("h4",{id:"esm-errors-with-jest"},"ESM errors with Jest"),(0,r.kt)("p",null,"A common issue with the current jest config involves importing an npm package which only offers an ESM build. These packages cause jest to error with ",(0,r.kt)("inlineCode",{parentName:"p"},"SyntaxError: Cannot use import statement outside a module"),". To work around this we provide a list of known packages to pass to the ",(0,r.kt)("inlineCode",{parentName:"p"},"[transformIgnorePatterns](https://jestjs.io/docs/configuration#transformignorepatterns-arraystring)")," jest configuration property. These packages can be extended in the following way:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"process.env.TZ = 'UTC';\nconst { grafanaESModules, nodeModulesToTransform } = require('./.config/jest/utils');\n\nmodule.exports = {\n  // Jest configuration provided by @grafana/create-plugin\n  ...require('./.config/jest.config'),\n  // Inform jest to only transform specific node_module packages.\n  transformIgnorePatterns: [nodeModulesToTransform([...grafanaESModules, 'packageName'])],\n};\n")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"extend-the-typescript-config"},"Extend the TypeScript config"),(0,r.kt)("p",null,"Edit the ",(0,r.kt)("inlineCode",{parentName:"p"},"tsconfig.json")," file in the project root in order to extend the TypeScript configuration."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Example:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  // Typescript configuration provided by @grafana/create-plugin\n  "extends": "./.config/tsconfig.json",\n  "compilerOptions": {\n    "preserveConstEnums": true\n  }\n}\n')),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"extend-the-webpack-config"},"Extend the Webpack config"),(0,r.kt)("p",null,"Follow these steps to extend the Webpack configuration that lives in ",(0,r.kt)("inlineCode",{parentName:"p"},".config/"),":"),(0,r.kt)("h4",{id:"1-create-a-new-webpack-configuration-file"},"1. Create a new Webpack configuration file"),(0,r.kt)("p",null,"Create a ",(0,r.kt)("inlineCode",{parentName:"p"},"webpack.config.ts")," file in the project root. This file will extend the webpack config provided by @grafana/create-plugin."),(0,r.kt)("h4",{id:"2-merge-the-grafana-config-with-your-custom-config"},"2. Merge the Grafana config with your custom config"),(0,r.kt)("p",null,"Use ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/survivejs/webpack-merge"},"webpack-merge")," for this."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"// webpack.config.ts\nimport type { Configuration } from 'webpack';\nimport { merge } from 'webpack-merge';\nimport grafanaConfig from './.config/webpack/webpack.config';\n\nconst config = async (env): Promise<Configuration> => {\n  const baseConfig = await grafanaConfig(env);\n\n  return merge(baseConfig, {\n    // Add custom config here...\n    output: {\n      asyncChunks: true,\n    },\n  });\n};\n\nexport default config;\n")),(0,r.kt)("h4",{id:"3-update-the-packagejson-to-use-the-new-webpack-config"},"3. Update the ",(0,r.kt)("inlineCode",{parentName:"h4"},"package.json")," to use the new Webpack config"),(0,r.kt)("p",null,"Update the ",(0,r.kt)("inlineCode",{parentName:"p"},"scripts")," in the ",(0,r.kt)("inlineCode",{parentName:"p"},"package.json")," to use the extended Webpack configuration."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Update ",(0,r.kt)("inlineCode",{parentName:"strong"},"build"),":")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-diff"},'-"build": "webpack -c ./.config/webpack/webpack.config.ts --env production",\n+"build": "webpack -c ./webpack.config.ts --env production",\n')),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Update ",(0,r.kt)("inlineCode",{parentName:"strong"},"dev"),":")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-diff"},'-"dev": "webpack -w -c ./.config/webpack/webpack.config.ts --env development",\n+"dev": "webpack -w -c ./webpack.config.ts --env development",\n')))}u.isMDXComponent=!0}}]);