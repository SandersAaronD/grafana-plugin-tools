"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[663],{876:(e,n,t)=>{t.d(n,{Zo:()=>m,kt:()=>f});var r=t(2784);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var d=r.createContext({}),l=function(e){var n=r.useContext(d),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},m=function(e){var n=l(e.components);return r.createElement(d.Provider,{value:n},e.children)},u="mdxType",p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},s=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,a=e.originalType,d=e.parentName,m=c(e,["components","mdxType","originalType","parentName"]),u=l(t),s=o,f=u["".concat(d,".").concat(s)]||u[s]||p[s]||a;return t?r.createElement(f,i(i({ref:n},m),{},{components:t})):r.createElement(f,i({ref:n},m))}));function f(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=t.length,i=new Array(a);i[0]=s;var c={};for(var d in n)hasOwnProperty.call(n,d)&&(c[d]=n[d]);c.originalType=e,c[u]="string"==typeof e?e:o,i[1]=c;for(var l=2;l<a;l++)i[l]=t[l];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}s.displayName="MDXCreateElement"},57:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>i,default:()=>f,frontMatter:()=>a,metadata:()=>c,toc:()=>l});var r=t(7896),o=(t(2784),t(876));const a={id:"frontend",title:"Frontend"},i=void 0,c={unversionedId:"frontend",id:"frontend",title:"Frontend",description:"Develop the frontend component of a Grafana plugin in Typescript with ReactJS as the View library. Several commands are available within the plugin directory for interacting with the frontend.",source:"@site/../docs/frontend.mdx",sourceDirName:".",slug:"/frontend",permalink:"/plugin-tools/docs/frontend",draft:!1,editUrl:"https://github.com/grafana/plugin-tools/edit/main/docusaurus/website/../docs/frontend.mdx",tags:[],version:"current",frontMatter:{id:"frontend",title:"Frontend"},sidebar:"docs",previous:{title:"Migrating from Grafana Toolkit",permalink:"/plugin-tools/docs/migrating-from-toolkit"},next:{title:"Backend",permalink:"/plugin-tools/docs/backend"}},d={},l=[{value:"Frontend CLI reference",id:"frontend-cli-reference",level:2},{value:'<SyncCommand cmd="run dev" />',id:"synccommand-cmdrun-dev-",level:3},{value:'<SyncCommand cmd="run build" />',id:"synccommand-cmdrun-build-",level:3},{value:'<SyncCommand cmd="run test" />',id:"synccommand-cmdrun-test-",level:3},{value:'<SyncCommand cmd="run e2e" />',id:"synccommand-cmdrun-e2e-",level:3},{value:'<SyncCommand cmd="run lint" />',id:"synccommand-cmdrun-lint-",level:3},{value:'<SyncCommand cmd="run lint:fix" />',id:"synccommand-cmdrun-lintfix-",level:3}],m=(u="SyncCommand",function(e){return console.warn("Component "+u+" was not imported, exported, or provided by MDXProvider as global scope"),(0,o.kt)("div",e)});var u;const p={toc:l},s="wrapper";function f(e){let{components:n,...t}=e;return(0,o.kt)(s,(0,r.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Develop the frontend component of a Grafana plugin in Typescript with ReactJS as the View library. Several commands are available within the ",(0,o.kt)("inlineCode",{parentName:"p"},"plugin")," directory for interacting with the frontend."),(0,o.kt)("admonition",{type:"caution"},(0,o.kt)("p",{parentName:"admonition"},"We ",(0,o.kt)("a",{parentName:"p",href:"https://grafana.com/docs/grafana/latest/developers/angular_deprecation/"},"do not support")," plugins written in Angular.")),(0,o.kt)("h2",{id:"frontend-cli-reference"},"Frontend CLI reference"),(0,o.kt)("p",null,"You can run the following commands when developing your plugin:"),(0,o.kt)("h3",{id:"synccommand-cmdrun-dev-"},(0,o.kt)(m,{cmd:"run dev",mdxType:"SyncCommand"})),(0,o.kt)("p",null,"Builds the plugin in development mode and watches for changes to source code to rebuild the plugin."),(0,o.kt)("h3",{id:"synccommand-cmdrun-build-"},(0,o.kt)(m,{cmd:"run build",mdxType:"SyncCommand"})),(0,o.kt)("p",null,"Builds the plugin for production. The output can be found in the ",(0,o.kt)("inlineCode",{parentName:"p"},"./dist")," directory."),(0,o.kt)("h3",{id:"synccommand-cmdrun-test-"},(0,o.kt)(m,{cmd:"run test",mdxType:"SyncCommand"})),(0,o.kt)("p",null,"Launches the test runner in watch mode."),(0,o.kt)("h3",{id:"synccommand-cmdrun-e2e-"},(0,o.kt)(m,{cmd:"run e2e",mdxType:"SyncCommand"})),(0,o.kt)("p",null,"Launches the e2e test runner. Make sure to have an instance of Grafana running before you run e2e tests."),(0,o.kt)("h3",{id:"synccommand-cmdrun-lint-"},(0,o.kt)(m,{cmd:"run lint",mdxType:"SyncCommand"})),(0,o.kt)("p",null,"Runs the linter against source code to verify that you have adhered to the formatting and styling rules."),(0,o.kt)("h3",{id:"synccommand-cmdrun-lintfix-"},(0,o.kt)(m,{cmd:"run lint:fix",mdxType:"SyncCommand"})),(0,o.kt)("p",null,"Runs the linter in fix mode to automatically format the frontend code."))}f.isMDXComponent=!0}}]);