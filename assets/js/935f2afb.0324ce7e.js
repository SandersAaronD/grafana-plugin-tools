"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[53],{1109:e=>{e.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"docs":[{"type":"category","label":"Introduction","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Backend plugins","href":"/plugin-tools/docs/introduction/backend-plugins","docId":"introduction/backend-plugins"},{"type":"link","label":"Grafana plugin SDK for Go","href":"/plugin-tools/docs/introduction/grafana-plugin-sdk-for-go","docId":"introduction/grafana-plugin-sdk-for-go"},{"type":"link","label":"Plugin protocol","href":"/plugin-tools/docs/introduction/plugin-protocol","docId":"introduction/plugin-protocol"},{"type":"link","label":"Data frames","href":"/plugin-tools/docs/introduction/data-frames","docId":"introduction/data-frames"}]},{"type":"category","label":"Getting Started","collapsible":true,"collapsed":false,"items":[{"type":"link","label":"Creating a Plugin","href":"/plugin-tools/docs/getting-started/creating-a-plugin","docId":"getting-started/creating-a-plugin"},{"type":"link","label":"Folder Structure","href":"/plugin-tools/docs/getting-started/folder-structure","docId":"getting-started/folder-structure"},{"type":"link","label":"Updating to New Releases","href":"/plugin-tools/docs/getting-started/updating-to-new-releases","docId":"getting-started/updating-to-new-releases"},{"type":"link","label":"Migrating from Grafana Toolkit","href":"/plugin-tools/docs/getting-started/migrating-from-toolkit","docId":"getting-started/migrating-from-toolkit"}],"href":"/plugin-tools/docs/getting-started/"},{"type":"category","label":"Development","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Frontend","href":"/plugin-tools/docs/development/frontend","docId":"development/frontend"},{"type":"link","label":"Backend","href":"/plugin-tools/docs/development/backend","docId":"development/backend"},{"type":"link","label":"Development Environment","href":"/plugin-tools/docs/development/docker","docId":"development/docker"},{"type":"link","label":"Continuous Integration","href":"/plugin-tools/docs/development/ci","docId":"development/ci"}]},{"type":"category","label":"Distribution","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Distributing Your Plugin","href":"/plugin-tools/docs/distribution/distributing-your-plugin","docId":"distribution/distributing-your-plugin"},{"type":"link","label":"Signing Your Plugin","href":"/plugin-tools/docs/distribution/signing-your-plugin","docId":"distribution/signing-your-plugin"}]},{"type":"category","label":"Advanced Usage","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Advanced Configuration","href":"/plugin-tools/docs/advanced-usage/advanced-configuration","docId":"advanced-usage/advanced-configuration"},{"type":"link","label":"Nested Plugins","href":"/plugin-tools/docs/advanced-usage/nested-plugins","docId":"advanced-usage/nested-plugins"}]}]},"docs":{"advanced-usage/advanced-configuration":{"id":"advanced-usage/advanced-configuration","title":"Advanced Configuration","description":"The .config/ directory holds the preferred configuration for the different tools used to develop, test, and build a Grafana plugin. Although you can make changes, we recommend against doing so. Instead, follow the guidance in this topic to customize your tooling configs.","sidebar":"docs"},"advanced-usage/nested-plugins":{"id":"advanced-usage/nested-plugins","title":"Nested Plugins","description":"Grafana app plugins can nest frontend data sources together with panel plugins so that you can provide a complete user experience.","sidebar":"docs"},"development/backend":{"id":"development/backend","title":"Backend","description":"Develop backend components for a Grafana plugin in Go. The following commands are frequently used to manage Go during plugin development:","sidebar":"docs"},"development/ci":{"id":"development/ci","title":"Continuous Integration","description":"Automate your development process to minimize errors and make it faster and more cost-efficient. The create-plugin tool helps you to configure your GitHub actions workflows to help automate your development process.","sidebar":"docs"},"development/docker":{"id":"development/docker","title":"Docker Development Environment","description":"The create-plugin tool includes a development environment featuring Docker. It allows you to start an instance of the Grafana application for plugin developers against which you can code.","sidebar":"docs"},"development/frontend":{"id":"development/frontend","title":"Frontend","description":"Develop the frontend component of a Grafana plugin in Typescript with ReactJS as the View library. Several commands are available within the plugin directory for interacting with the frontend.","sidebar":"docs"},"distribution/distributing-your-plugin":{"id":"distribution/distributing-your-plugin","title":"Distributing Your Plugin","description":"To distribute a Grafana plugin either to the community or privately, the plugin must be signed so the Grafana application can verify its authenticity. You can do this with the @grafana/sign-plugin package.","sidebar":"docs"},"distribution/signing-your-plugin":{"id":"distribution/signing-your-plugin","title":"Signing Your Plugin","description":"Grafana requires all plugins to be signed so that we can verify their authenticity with signature verification.","sidebar":"docs"},"getting-started/creating-a-plugin":{"id":"getting-started/creating-a-plugin","title":"Creating a Plugin","description":"To create a new Grafana plugin, run the following command in your shell:","sidebar":"docs"},"getting-started/folder-structure":{"id":"getting-started/folder-structure","title":"Folder Structure","description":"After you install the create-plugin tool and have answered the prompts, your project should look similar to this:","sidebar":"docs"},"getting-started/getting-started":{"id":"getting-started/getting-started","title":"Getting Started","description":"Grafana\'s plugin tools offer an officially supported way to extend Grafana\'s core functionality. We have designed these tools to help you to develop your plugins faster with a modern build setup and zero configuration.","sidebar":"docs"},"getting-started/migrating-from-toolkit":{"id":"getting-started/migrating-from-toolkit","title":"Migrating from Grafana Toolkit","description":"The @grafana/toolkit tool is now deprecated. If you are still using @grafana/toolkit to scaffold and develop plugins, follow this guide to make the jump to our newest plugin tools.","sidebar":"docs"},"getting-started/updating-to-new-releases":{"id":"getting-started/updating-to-new-releases","title":"Updating to New Releases","description":"To update an existing plugin to use a newer version of the create-plugin tool, run the following command:","sidebar":"docs"},"introduction/backend-plugins":{"id":"introduction/backend-plugins","title":"Backend plugins","description":"The Grafana plugin system for backend development allows you to integrate Grafana with virtually anything and offer custom visualizations. This document explains the system\'s background, use cases, and key features.","sidebar":"docs"},"introduction/data-frames":{"id":"introduction/data-frames","title":"Data frames","description":"Grafana supports a variety of different data sources, each with its own data model. To make this possible, Grafana consolidates the query results from each of these data sources into one unified data structure called a data frame.","sidebar":"docs"},"introduction/grafana-plugin-sdk-for-go":{"id":"introduction/grafana-plugin-sdk-for-go","title":"Grafana plugin SDK for Go","description":"The Grafana plugin SDK for Go is a Go module that provides a set of packages that you can use to implement a backend plugin.","sidebar":"docs"},"introduction/plugin-protocol":{"id":"introduction/plugin-protocol","title":"Plugin protocol","description":"The Grafana server uses a physical wire protocol to communicate with backend plugins. This protocol establishes a contract between Grafana and backend plugins to allow them to communicate with each other.","sidebar":"docs"}}}')}}]);