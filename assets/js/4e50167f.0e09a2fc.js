"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[952],{876:(e,t,a)=>{a.d(t,{Zo:()=>s,kt:()=>g});var n=a(2784);function o(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){o(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,o=function(e,t){if(null==e)return{};var a,n,o={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(o[a]=e[a]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(o[a]=e[a])}return o}var u=n.createContext({}),p=function(e){var t=n.useContext(u),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},s=function(e){var t=p(e.components);return n.createElement(u.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var a=e.components,o=e.mdxType,r=e.originalType,u=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),d=p(a),g=o,m=d["".concat(u,".").concat(g)]||d[g]||c[g]||r;return a?n.createElement(m,i(i({ref:t},s),{},{components:a})):n.createElement(m,i({ref:t},s))}));function g(e,t){var a=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=a.length,i=new Array(r);i[0]=d;var l={};for(var u in t)hasOwnProperty.call(t,u)&&(l[u]=t[u]);l.originalType=e,l.mdxType="string"==typeof e?e:o,i[1]=l;for(var p=2;p<r;p++)i[p]=a[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}d.displayName="MDXCreateElement"},3526:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>u,contentTitle:()=>i,default:()=>c,frontMatter:()=>r,metadata:()=>l,toc:()=>p});var n=a(7896),o=(a(2784),a(876));const r={id:"creating-a-plugin",title:"Creating a Plugin"},i=void 0,l={unversionedId:"creating-a-plugin",id:"creating-a-plugin",title:"Creating a Plugin",description:"To create a new Grafana plugin run the following command in your shell:",source:"@site/../docs/creating-a-plugin.md",sourceDirName:".",slug:"/creating-a-plugin",permalink:"/plugin-tools/docs/creating-a-plugin",draft:!1,editUrl:"https://github.com/grafana/plugin-tools/edit/main/docusaurus/website/../docs/creating-a-plugin.md",tags:[],version:"current",frontMatter:{id:"creating-a-plugin",title:"Creating a Plugin"},sidebar:"docs",previous:{title:"Getting Started",permalink:"/plugin-tools/docs/getting-started"},next:{title:"Folder Structure",permalink:"/plugin-tools/docs/folder-structure"}},u={},p=[{value:"Prompts",id:"prompts",level:2},{value:"What is the name of your plugin?",id:"what-is-the-name-of-your-plugin",level:3},{value:"What is the organization name of your plugin?",id:"what-is-the-organization-name-of-your-plugin",level:3},{value:"How would you describe your plugin?",id:"how-would-you-describe-your-plugin",level:3},{value:"What type of plugin would you like?",id:"what-type-of-plugin-would-you-like",level:3},{value:"Do you want a backend part of your plugin?",id:"do-you-want-a-backend-part-of-your-plugin",level:3},{value:"Do you want to add Github CI and Release workflows?",id:"do-you-want-to-add-github-ci-and-release-workflows",level:3},{value:"Do you want to add a Github workflow for automatically checking Grafana API compatibility on PRs?",id:"do-you-want-to-add-a-github-workflow-for-automatically-checking-grafana-api-compatibility-on-prs",level:3}],s={toc:p};function c(e){let{components:t,...a}=e;return(0,o.kt)("wrapper",(0,n.Z)({},s,a,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"To create a new Grafana plugin run the following command in your shell:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"npx @grafana/create-plugin\n")),(0,o.kt)("admonition",{type:"info"},(0,o.kt)("p",{parentName:"admonition"},"The answers to the name, organization and type of plugin prompts are combined to create the plugin directory name and the plugin id."),(0,o.kt)("pre",{parentName:"admonition"},(0,o.kt)("code",{parentName:"pre"},"? What is going to be the name of your plugin? mongodb\n? What is the organization name of your plugin? grafana\n? What type of plugin would you like? datasource\n")),(0,o.kt)("p",{parentName:"admonition"},"In the above example, this will cause the directory and plugin ID to be named ",(0,o.kt)("inlineCode",{parentName:"p"},"grafana-mongodb-datasource"))),(0,o.kt)("h2",{id:"prompts"},"Prompts"),(0,o.kt)("p",null,"When running the create command, the following prompts appear asking for confirmation before making changes:"),(0,o.kt)("h3",{id:"what-is-the-name-of-your-plugin"},"What is the name of your plugin?"),(0,o.kt)("p",null,"The name of your plugin. This helps to identify its purpose."),(0,o.kt)("h3",{id:"what-is-the-organization-name-of-your-plugin"},"What is the organization name of your plugin?"),(0,o.kt)("p",null,"Grafana plugins require an organization name (normally your ",(0,o.kt)("a",{parentName:"p",href:"https://grafana.com/signup/"},"Grafana account")," username) to help uniquely identify your plugin."),(0,o.kt)("h3",{id:"how-would-you-describe-your-plugin"},"How would you describe your plugin?"),(0,o.kt)("p",null,"Give your plugin a description. This will help users more easily understand what it does when the plugin is distributed."),(0,o.kt)("h3",{id:"what-type-of-plugin-would-you-like"},"What type of plugin would you like?"),(0,o.kt)("p",null,"Select from the following choices:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"app")," (Applications, or app plugins, create a custom out-of-the-box monitoring experience.)"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"datasource")," (Data source plugins add support for new databases or external APIs.)"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"panel")," (Add new visualizations to dashboards with panel plugins.)")),(0,o.kt)("p",null,"To learn more about the types of plugins, refer to the ",(0,o.kt)("a",{parentName:"p",href:"https://grafana.com/docs/grafana/latest/administration/plugin-management/"},"plugin management guidelines"),"."),(0,o.kt)("h3",{id:"do-you-want-a-backend-part-of-your-plugin"},"Do you want a backend part of your plugin?"),(0,o.kt)("p",null,"App and Datasource plugins can have a backend component written in Go. Developing a backend to your plugin brings powerful features such as:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Enable Grafana Alerting for data sources."),(0,o.kt)("li",{parentName:"ul"},"Connect to non-HTTP services that normally can\u2019t be connected to from a web browser, e.g. SQL database servers."),(0,o.kt)("li",{parentName:"ul"},"Keep state between users, e.g. query caching for data sources."),(0,o.kt)("li",{parentName:"ul"},"Use custom authentication methods and/or authorization checks that aren\u2019t supported in Grafana."),(0,o.kt)("li",{parentName:"ul"},"Use a custom data source request proxy. To learn more see ",(0,o.kt)("a",{parentName:"li",href:"https://grafana.com/docs/grafana/latest/developers/plugins/backend/#resources"},"Backend developer resources"),".")),(0,o.kt)("h3",{id:"do-you-want-to-add-github-ci-and-release-workflows"},"Do you want to add Github CI and Release workflows?"),(0,o.kt)("p",null,"Add ",(0,o.kt)("a",{parentName:"p",href:"/plugin-tools/docs/ci"},"github workflows")," to your development cycle to help catch issues early or release your plugin to the community."),(0,o.kt)("h3",{id:"do-you-want-to-add-a-github-workflow-for-automatically-checking-grafana-api-compatibility-on-prs"},"Do you want to add a Github workflow for automatically checking Grafana API compatibility on PRs?"),(0,o.kt)("p",null,"Add a ",(0,o.kt)("a",{parentName:"p",href:"/plugin-tools/docs/ci#compatibility-check-is-compatibleyml"},"github workflow")," to regularly check your plugin is compatibile with the latest version of Grafana."))}c.isMDXComponent=!0}}]);